[{"/usr/src/app/musico/src/index.js":"1","/usr/src/app/musico/src/App.js":"2","/usr/src/app/musico/src/reportWebVitals.js":"3","/usr/src/app/musico/src/components/playlists.js":"4","/usr/src/app/musico/src/components/header.js":"5","/usr/src/app/musico/src/components/songs.js":"6","/usr/src/app/musico/src/components/playlist.js":"7","/usr/src/app/musico/src/components/login.js":"8","/usr/src/app/musico/src/components/users.js":"9","/usr/src/app/musico/src/components/artistdata.js":"10","/usr/src/app/musico/src/components/playlistForm.js":"11"},{"size":500,"mtime":1611210704473,"results":"12","hashOfConfig":"13"},{"size":1096,"mtime":1615142156329,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1611210704521,"results":"15","hashOfConfig":"13"},{"size":6205,"mtime":1615142138390,"results":"16","hashOfConfig":"13"},{"size":2095,"mtime":1615107864137,"results":"17","hashOfConfig":"13"},{"size":4120,"mtime":1614635461122,"results":"18","hashOfConfig":"13"},{"size":3781,"mtime":1614635461118,"results":"19","hashOfConfig":"13"},{"size":711,"mtime":1611799608126,"results":"20","hashOfConfig":"13"},{"size":568,"mtime":1611266452973,"results":"21","hashOfConfig":"13"},{"size":6977,"mtime":1615083302208,"results":"22","hashOfConfig":"13"},{"size":2780,"mtime":1614635461119,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"3rz5jq",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},"/usr/src/app/musico/src/index.js",[],["53","54"],"/usr/src/app/musico/src/App.js",["55"],"/usr/src/app/musico/src/reportWebVitals.js",[],"/usr/src/app/musico/src/components/playlists.js",["56","57","58","59"],"/usr/src/app/musico/src/components/header.js",["60"],"import React from 'react';\nimport {Link } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport FeaturedPlayListIcon from '@material-ui/icons/FeaturedPlayList';\nimport PageviewIcon from '@material-ui/icons/Pageview';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { NoEncryption } from '@material-ui/icons';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n      \n    },\n    title: {\n        flexGrow: 1,\n    },\n    rootLink: {\n        flexGrow: 2\n    },\n    linkBorder: {\n        textDecoration: \"none\"\n        \n    },\n    button: {\n        margin: theme.spacing(1),\n        color: \"#c5cae9\",\n        \"&:hover\": {\n            color: \"#9fa8da\"\n        }\n    },\n    iconSize: {\n        fontSize: 30\n    },\n}));\n\n\nconst Header = () => {\n    const classes = useStyles();\nreturn(\n    <Grid item md={12}>\n        <AppBar position=\"static\" className={classes.root}>\n            <Toolbar className={classes.rootLink}> \n                <Typography variant=\"h4\" className={classes.title}>\n                    Musico\n                </Typography>\n                <Link to=\"/playlists\" className={classes.linkBorder}>\n                    <Button className={classes.button} startIcon={<FeaturedPlayListIcon className={classes.iconSize} />}>\n                        <Typography variant=\"h6\" className={classes.title}>MyPlaylists</Typography>\n                    </Button>\n                </Link>\n                <Link to=\"/songs\" className={classes.linkBorder} >\n                <Button className={classes.button} startIcon={<PageviewIcon className={classes.iconSize}/>}>\n                    <Typography variant=\"h6\" className={classes.title}>SearchMusic</Typography>\n                </Button> \n                </Link>\n            </Toolbar>\n               \n            \n            \n        </AppBar>\n    </Grid>\n    \n)\n}\n\n\n\n\nexport default Header;",["61","62"],"/usr/src/app/musico/src/components/songs.js",[],"/usr/src/app/musico/src/components/playlist.js",["63","64"],"import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link, useParams } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\n\n\n\nconst Playlist = () => {\n    const { name } = useParams();\n    const [playlistSongs, setPlaylistSongs] = useState([]);\n    useEffect(() => {\n        axios.get('/api/v1/playlist/' + name, {\n            params: {\n                id: 2\n            }\n        })\n        .then(response => {\n            console.log(response.data.Songs);\n            setPlaylistSongs(response.data.Songs);\n        })\n    },[]);\n\n    const handleSongClick = (song_id, playlist_id) => {\n        axios.delete(`/api/v1/playlist/relation/${song_id}/${playlist_id} `)\n        .then(response => {\n            \n            setPlaylistSongs(response.data[0].Songs)\n        });\n    }\n\n\n    return(\n        <Grid container>\n            \n            {/* <ul>\n                {playlistSongs.map(playlist => (\n                    <li><button key={playlist.id}><Link to={\"/playlist/\" + playlist.name}>{playlist.name}</Link></button></li>\n                ))}\n                \n            </ul> */}\n            <Grid item md={12}>\n                <h2>{name}</h2>\n            </Grid>\n            <Grid item md={3}></Grid>\n            <Grid item md={6} spacing={8}>\n                <TableContainer component={Paper}>\n                    <Table aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>ジャケ写</TableCell>\n                                <TableCell>曲名</TableCell>\n                                <TableCell>アーティスト名</TableCell>\n                                <TableCell>アルバム名</TableCell>\n                                <TableCell>ジャンル</TableCell>\n                                <TableCell>リリース日</TableCell>\n                                <TableCell></TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {playlistSongs.map(song => (\n                                <TableRow key={song.id}>\n                                    <TableCell><img src={song.albumUrl} alt={song.albumName} /></TableCell>\n                                    <TableCell>{song.name}</TableCell>\n                                    <TableCell>{song.artistName}</TableCell>\n                                    <TableCell>{song.albumName}</TableCell>\n                                    <TableCell>{song.genre}</TableCell>\n                                    <TableCell>{song.releaseAt}</TableCell>\n                                    <TableCell>\n                                        <IconButton aria-label=\"delete\"  onClick={() => {handleSongClick(song.Relation.songId, song.Relation.playlistId)}}>\n                                        <DeleteIcon fontSize=\"large\" color=\"secondary\"/>\n                                        </IconButton>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Grid>\n       \n        </Grid>\n    )\n}\n\n\n\nexport default Playlist;\n","/usr/src/app/musico/src/components/login.js",["65","66"],"import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport GoogleButton from 'react-google-button';\nimport axios from 'axios';\nconst Login = () => {\n\n    const history = useHistory();\n\n\n    const signIn = async() => {\n        fetch('/api/auth/google')\n        .then(res => {\n            const currentCustomer = res.data;\n            console.log(currentCustomer);\n            history.push('/users');\n        })\n        const currentCustomer = await history.push('/api/auth/google');\n        console.log(currentCustomer);\n        history.push('/users');\n        \n    }\n\n\n\n    return (\n        <GoogleButton\n            onClick={signIn}\n        />\n    )\n}\n\nexport default Login;","/usr/src/app/musico/src/components/users.js",[],"/usr/src/app/musico/src/components/artistdata.js",["67","68","69","70","71","72"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios'\nconst ArtistData = (props) => {\n\n    const history = useHistory();\n    \n    useEffect(() => {\n        \n            axios.get('/api/v1/playlist', {\n                params: {\n                    id: 2\n                }\n            })\n            .then(response => {\n                \n                setPlaylists(response.data.Playlists)\n                setPlaylistValue(response.data.Playlists[0].name)\n            }).catch(err => console.log(err));\n        \n        \n    },[])\n    \n    \n    const [playlists, setPlaylists] = useState([]);\n    const [playlistValue, setPlaylistValue] = useState(null);\n\n    const handlePlaylistChange = e => {\n        setPlaylistValue(e.target.selectedOptions[0].text);\n       \n    }\n\n\n    const handlePlaylistSubmit = event => {\n        event.preventDefault();\n        const playlist_id = event.target.playlist.value;\n        const customer_id = event.target.customer_id.value;\n        const track_id = event.target.track_id.value;\n        const name = event.target.name.value;\n        const artist_name = event.target.artist_name.value;\n        const album_name = event.target.album_name.value;\n        const album_url = event.target.album_url.value;\n        const genre = event.target.genre.value;\n        const release_at = event.target.release_at.value;\n        axios.post('/api/v1/playlist/relation', {\n            customer_id: 2,\n            song: {\n                trackId: track_id,\n                name: name,\n                artistName: artist_name,\n                albumName: album_name,\n                albumUrl: album_url,\n                genre: genre,\n                releaseAt: release_at\n            },\n            playlistId: playlist_id\n            \n        })\n        .then(response => {\n            console.log(response.data.msg);\n        })\n    }\n    const favoriteSubmit = (event) => {\n        event.preventDefault();\n        // console.log(event.target.elements);\n        // console.log(event.target.customer_id.value);\n        const customer_id = event.target.customer_id.value;\n        const track_id = event.target.track_id.value;\n        const name = event.target.name.value;\n        const artist_name = event.target.artist_name.value;\n        const album_name = event.target.album_name.value;\n        const album_url = event.target.album_url.value;\n        const genre = event.target.genre.value;\n        const release_at = event.target.release_at.value;\n        axios.post('/api/v1/favorite', {\n            customer_id: 2,\n            song: {\n                trackId: track_id,\n                name: name,\n                artistName: artist_name,\n                albumName: album_name,\n                albumUrl: album_url,\n                genre: genre,\n                releaseAt: release_at\n            }\n            \n        })\n        .then(response => {\n            console.log(response.data.msg);\n        })\n    }\n\n    return(\n        \n        <div className={props.id ? 'album': 'noalbum'}>\n            <div className=\"flex\">\n                <img src={props.albumUrl} alt={props.album} className=\"albumImage\"/>\n                <div>\n                    <p>ジャンル: <b>{props.genre}</b></p>\n                </div>\n                \n            </div>\n            <div className=\"mask\">\n                <div className=\"caption\">\n                    <p>{props.album}</p>\n                    <div className=\"favorite\">\n                        <form onSubmit={event => favoriteSubmit(event)}>\n                            \n                                <input type=\"hidden\" name=\"customer_id\" value=\"2\" />\n                                <input type=\"hidden\" name=\"track_id\" value={props.id} />\n                                <input type=\"hidden\" name=\"name\" value={props.trackName} />\n                                <input type=\"hidden\" name=\"artist_name\" value={props.name} />\n                                <input type=\"hidden\" name=\"album_name\" value={props.album} />\n                                <input type=\"hidden\" name=\"album_url\" value={props.AlbumUrl60} />\n                                <input type=\"hidden\" name=\"genre\" value={props.genre} />\n                                <input type=\"hidden\" name=\"release_at\" value={props.release} />\n                        \n                            <button type=\"submit\"><FavoriteBorderIcon /></button>\n                        </form>\n                    </div>\n                    <div className=\"playlist\">\n                        <form onSubmit={handlePlaylistSubmit}>\n                            \n                                <input type=\"hidden\" name=\"customer_id\" value=\"2\" />\n                                <input type=\"hidden\" name=\"track_id\" value={props.id} />\n                                <input type=\"hidden\" name=\"name\" value={props.trackName} />\n                                <input type=\"hidden\" name=\"artist_name\" value={props.name} />\n                                <input type=\"hidden\" name=\"album_name\" value={props.album} />\n                                <input type=\"hidden\" name=\"album_url\" value={props.AlbumUrl60} />\n                                <input type=\"hidden\" name=\"genre\" value={props.genre} />\n                                <input type=\"hidden\" name=\"release_at\" value={props.release} />\n                            \n                            <div>\n                                <label htmlFor=\"playlist\">Playlist</label>\n                                <select name=\"playlist\" onChange={handlePlaylistChange}>\n                                    {\n                                     playlists.map(playlist => (\n                                        <option value={playlist.id} key={playlist.id}>{playlist.name}</option>\n                                         \n                                     ))\n                                    }\n                                    \n                                    \n                                    \n                                </select>\n                            </div>\n                            <Button type=\"submit\" size=\"small\" variant=\"contained\" color=\"primary\">{playlistValue + 'に'}追加</Button>\n                        </form>\n                    </div>\n                    \n                </div>\n            </div>\n            <div>\n                <p>アーティスト: <b>{props.name}</b></p>\n                <p>曲名: <b>{props.trackName}</b></p>\n                <p>リリース日: <b>{props.release}</b></p>\n            </div>\n            \n            \n            \n        </div>\n    );\n}\n\nexport default ArtistData\n","/usr/src/app/musico/src/components/playlistForm.js",["73"],"import React, { useState } from 'react';\nimport '../styles/popupform.css';\nimport axios from 'axios';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Radio from '@material-ui/core/Radio';\nimport { FormControlLabel } from '@material-ui/core';\n\nconst PlaylistForm = (props) => {\n    const [value, setValue] = useState(\"false\");\n\n    const handleChange = (e) => {\n        setValue(e.target.value);\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const nameElement = event.target.elements[\"name\"];\n        const isPublicElement = event.target.elements[\"isPublic\"];\n        axios.post('/api/v1/playlist/', {\n            name: nameElement.value,\n            isPublic: isPublicElement.value\n        })\n        .then(response => {\n            if(response.data.isCreate){\n                nameElement.value = \"\";\n                isPublicElement.value = \"\";\n                console.log(response);\n                props.closePopup(!props.isPopup);\n            }else{\n                console.log(response.msg);\n            }\n            \n        })\n\n    }\n\n\n\n    return(\n        <div className=\"playlistform\">\n            <div className=\"popup\">\n                <div className=\"popup_inner\" container>\n                    <div >\n                        <h2>Create Playlist</h2>\n                        <Button variant=\"outlined\" color=\"secondary\" onClick={() => props.closePopup(!props.isPopup)}>Close Popup</Button>\n                    </div>\n                    <div >\n                        <form onSubmit={event => handleSubmit(event)}>\n                            <div>\n                                <TextField  name=\"name\" id=\"name\" label=\"Playlist Name\" />\n                            </div>\n                            <div>\n                                <FormLabel component=\"legend\">みんなに公開しますか？</FormLabel>\n                                    <RadioGroup aria-label=\"isPublic\" name=\"isPublic\" value={value} onChange={handleChange}>\n                                        <FormControlLabel value=\"true\" control={<Radio />} label=\"Yes(Public)\" />\n                                        <FormControlLabel value=\"false\" control={<Radio />} label=\"No(Private)\" />\n                                    </RadioGroup>\n                            </div>\n                            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Playlist Create</Button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PlaylistForm",{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":1,"column":40,"nodeType":"80","messageId":"81","endLine":1,"endColumn":44},{"ruleId":"78","severity":1,"message":"82","line":40,"column":12,"nodeType":"80","messageId":"81","endLine":40,"endColumn":20},{"ruleId":"78","severity":1,"message":"83","line":40,"column":22,"nodeType":"80","messageId":"81","endLine":40,"endColumn":33},{"ruleId":"78","severity":1,"message":"84","line":42,"column":11,"nodeType":"80","messageId":"81","endLine":42,"endColumn":24},{"ruleId":"85","severity":1,"message":"86","line":83,"column":31,"nodeType":"87","endLine":83,"endColumn":35},{"ruleId":"78","severity":1,"message":"88","line":11,"column":10,"nodeType":"80","messageId":"81","endLine":11,"endColumn":22},{"ruleId":"74","replacedBy":"89"},{"ruleId":"76","replacedBy":"90"},{"ruleId":"78","severity":1,"message":"79","line":4,"column":10,"nodeType":"80","messageId":"81","endLine":4,"endColumn":14},{"ruleId":"91","severity":1,"message":"92","line":30,"column":7,"nodeType":"93","endLine":30,"endColumn":9,"suggestions":"94"},{"ruleId":"78","severity":1,"message":"95","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":25},{"ruleId":"78","severity":1,"message":"96","line":4,"column":8,"nodeType":"80","messageId":"81","endLine":4,"endColumn":13},{"ruleId":"78","severity":1,"message":"97","line":3,"column":10,"nodeType":"80","messageId":"81","endLine":3,"endColumn":20},{"ruleId":"78","severity":1,"message":"98","line":4,"column":8,"nodeType":"80","messageId":"81","endLine":4,"endColumn":12},{"ruleId":"78","severity":1,"message":"99","line":6,"column":8,"nodeType":"80","messageId":"81","endLine":6,"endColumn":18},{"ruleId":"78","severity":1,"message":"100","line":11,"column":11,"nodeType":"80","messageId":"81","endLine":11,"endColumn":18},{"ruleId":"78","severity":1,"message":"101","line":42,"column":15,"nodeType":"80","messageId":"81","endLine":42,"endColumn":26},{"ruleId":"78","severity":1,"message":"101","line":72,"column":15,"nodeType":"80","messageId":"81","endLine":72,"endColumn":26},{"ruleId":"78","severity":1,"message":"98","line":4,"column":8,"nodeType":"80","messageId":"81","endLine":4,"endColumn":12},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'playlist' is assigned a value but never used.","'setPlaylist' is assigned a value but never used.","'inputIsPublic' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'NoEncryption' is defined but never used.",["102"],["103"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.","ArrayExpression",["104"],"'useState' is defined but never used.","'axios' is defined but never used.","'makeStyles' is defined but never used.","'Grid' is defined but never used.","'InputLabel' is defined but never used.","'history' is assigned a value but never used.","'customer_id' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},"Update the dependencies array to be: [name]",{"range":"107","text":"108"},[1045,1047],"[name]"]